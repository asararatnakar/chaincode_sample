version: '2'
networks:
   bridge:

services:

#TODO: Disable till SDK is ready to consume
#  ca:
#    image: hyperledger/fabric-ca
#    ports:
#      - 7054:7054
#    environment:
#      - CA_CERTIFICATE=peerOrg0_cert.pem
#      - CA_KEY_CERTIFICATE=peerOrg0_pk.pem
#    volumes:
#        - ./tmp/ca:/.fabric-ca
#    command: sh -c 'sleep 10; fabric-ca server start -ca /.fabric-ca/$$CA_CERTIFICATE -ca-key /.fabric-ca/$$CA_KEY_CERTIFICATE -config /etc/hyperledger/fabric-ca/server-config.json -address "0.0.0.0"'
#    container_name: ca

  orderer:
    container_name: orderer
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LEDGERTYPE=ram
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT=10
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_ORDERERTYPE=solo
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
      - ORDERER_CFG_PATH=/etc/hyperledger/fabric
      #Temporary work around?
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureSolo
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    networks:
      - bridge
  
  peer0:
    container_name: peer0
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_NETWORKID=peer0
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer0
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    ports:
      - 7051:7051
      - 7053:7053
    command: peer node start --peer-defaultchain=false
    links:
      - orderer:orderer
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto/peer1:/opt/gopath/src/github.com/hyperledger/fabric/orderer/msp/sampleconfig
        - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
    depends_on:
      - orderer
    networks:
      - bridge
  peer1:
    container_name: peer1
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_NETWORKID=peer1
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer0
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_ORGLEADER=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    ports:
      - 8051:7051
      - 8053:7053
    command: peer node start --peer-defaultchain=false
    links:
      - orderer:orderer
      - peer0:peer0
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto/peer2:/opt/gopath/src/github.com/hyperledger/fabric/orderer/msp/sampleconfig
        - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
    depends_on:
      - orderer
    networks:
      - bridge
  peer2:
    container_name: peer2
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_NETWORKID=peer2
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_ORGLEADER=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    ports:
      - 9051:7051
      - 9053:7053
    command: peer node start --peer-defaultchain=false
    links:
      - orderer:orderer
      - peer0:peer0
      - peer1:peer1
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto/peer2:/opt/gopath/src/github.com/hyperledger/fabric/peer/msp/sampleconfig
        - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
    depends_on:
      - orderer
    networks:
      - bridge

  cli:
    container_name: cli
    image: hyperledger/fabric-peer
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_PEER_ID=cli
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:7050
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sh -c './script.sh; sleep 100000'
    links:
      - orderer:orderer
      - peer0:peer0
      - peer1:peer1
      - peer2:peer2
    volumes:
        - /var/run/:/host/var/run/
        - ./examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
        #TODO: probably play a bit more here
        - ./crypto/peer0:/opt/gopath/src/github.com/hyperledger/fabric/msp/sampleconfig
        - ./script.sh:/opt/gopath/src/github.com/hyperledger/fabric/peer/script.sh
    depends_on:
      - orderer
      - peer0
      - peer1
      - peer2
    networks:
      - bridge
